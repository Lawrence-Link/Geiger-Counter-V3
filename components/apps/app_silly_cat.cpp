/*
 * Copyright (C) 2025 Lawrence Link
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */


#include "core/app/IApplication.h"
#include "core/app/app_system.h"
#include <memory>

static const uint8_t image__6cf6e023_7965_49b3_8af7_aae253958910_copy_bits[] = {0x00,0x00,0x06,0x03,0x8e,0x03,0x8f,0x07,0xaf,0x07,0x20,0x00,0x00,0x00,0x70,0x00,0x70,0x00,0xf8,0x00,0x00,0x00};
static const uint8_t image_Layer_8_bits[] = {0xff,0x01};
static const uint8_t image_The_boy_bits[] = {0xf0,0x3f,0x00,0x00,0x00,0xc0,0xff,0x07,0xf0,0x7f,0x00,0x00,0x00,0xe0,0xff,0x07,0xf8,0xff,0x00,0x0f,0x00,0xf0,0xff,0x07,0xf8,0xff,0x01,0x7f,0x00,0xf8,0xff,0x07,0xf8,0xff,0x03,0xff,0x01,0xfc,0xff,0x07,0xf8,0xff,0x07,0xff,0x03,0xfc,0xff,0x0f,0xfc,0xff,0x07,0xfe,0x0f,0xfe,0xff,0x0f,0xfc,0xff,0x0f,0xfe,0x1f,0xfe,0xff,0x0f,0xfc,0xff,0x1f,0xfc,0x3f,0xff,0xff,0x0f,0xfc,0xff,0x3f,0xf8,0x7f,0xff,0xff,0x0f,0xfc,0xff,0x3f,0xfe,0xff,0xfe,0xff,0x0f,0xfc,0xff,0xdf,0xff,0xff,0xff,0xff,0x0f,0xfc,0xff,0xef,0xff,0xff,0xff,0xff,0x0f,0xfc,0xff,0x07,0xc0,0xff,0xff,0xff,0x0f,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x0f,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0x07,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0x03,0xf0,0xff,0xff,0xff,0xff,0x03,0xfe,0x03,0xf0,0xff,0xff,0xff,0x0f,0x80,0xff,0x01,0xf0,0x03,0x00,0xff,0x07,0x7c,0xff,0x01,0xe0,0xef,0x01,0xff,0x07,0x7c,0xff,0x00,0xe0,0xf7,0x01,0xff,0x07,0x7c,0x7f,0x00,0xc0,0xf7,0x01,0xff,0x07,0x7c,0x3f,0x00,0x80,0xf7,0x01,0xff,0x07,0x7c,0x0f,0x00,0x81,0xf7,0x01,0xff,0x07,0x7c,0xff,0x07,0xff,0xf3,0x01,0xff,0x07,0x7c,0xff,0x03,0xfe,0xf3,0x83,0xff,0x0f,0x7e,0xff,0x01,0xfe,0xf7,0x83,0xff,0x0f,0xbe,0xff,0x00,0xfc,0xf7,0x83,0xf3,0x1f,0xff,0x7f,0x00,0xf0,0xf7,0xc7,0xe3,0xff,0xff,0x3f,0x00,0xe0,0xff,0xff,0xff,0xff,0xff,0x3f,0x00,0xe0,0xf9,0xff,0xff,0xff,0xdf,0x3e,0x00,0xe0,0xea,0xff,0xff,0xff,0x2f,0x7f,0x00,0xe0,0xf3,0xff,0xff,0xf7,0xbf,0xff,0x00,0xf0,0xff,0xff,0xcf,0xf7,0xff,0xff,0x00,0xf0,0xff,0x7f,0x07,0xf8,0xff,0xff,0x01,0xf8,0xff,0xff,0xf0,0xff,0xff,0xff,0x03,0xf8,0xff,0xff,0xff,0xff,0xff,0x7d,0x00,0x78,0xf8,0xff,0xff,0xff,0x7f,0x00,0x00,0x00,0xf0,0xff,0xff,0xff,0x1f,0x00,0x00,0x00,0x80,0xff,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0xfc,0xff,0xff,0x01,0x00,0x00,0x00,0x00,0x87,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0xfe,0xff,0xff,0x03,0x00,0x00,0x00,0x00,0xfc,0xff,0xff,0x07,0x00,0x00,0x00,0x00,0xf8,0xff,0xff,0x07,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0x0f,0x00,0x00,0x00,0x00,0xf8,0xff,0xff,0x1f,0x00,0x00,0x00,0x00,0xfc,0xff,0xff,0x1f,0x00,0x00,0x00,0x00,0xfc,0xff,0xff,0x1f,0x00,0x00,0x00,0x00,0xe0,0xff,0xff,0x3f,0x00,0x00,0x00,0x00,0xe0,0xff,0xff,0x3f,0x00,0x00,0x00,0x00,0xe0,0xff,0xff,0x3f,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0xf0,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0xf8,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,0xf8,0xff,0xff,0xff,0x00,0x00};


class SillyCat : public IApplication {
private:
    PixelUI& m_ui;
public:
    SillyCat(PixelUI& ui):m_ui(ui) {};
    void draw() override {
        U8G2& u8g2 = m_ui.getU8G2();
        u8g2.setFontMode(1);
        u8g2.setBitmapMode(1);
        u8g2.drawXBMP(67, 0, 60, 64, image_The_boy_bits);

        u8g2.setDrawColor(2);
        u8g2.drawXBMP(2, 2, 11, 11, image__6cf6e023_7965_49b3_8af7_aae253958910_copy_bits);

        u8g2.setDrawColor(1);
        u8g2.drawLine(0, 16, 47, 16);

        u8g2.setFont(u8g2_font_5x7_tr);
        u8g2.drawStr(4, 30, "You love");
        u8g2.drawStr(5, 42, "Radiation,");
        u8g2.drawStr(5, 54, "Don't you?");
        u8g2.drawXBMP(47, 16, 9, 1, image_Layer_8_bits);
    }

    bool handleInput(InputEvent event) override {
        return false;
    }
    
    void onEnter(ExitCallback cb) override {
        IApplication::onEnter(cb);
        m_ui.setContinousDraw(true);
        m_ui.markDirty(); 
    }

    void onResume() override {
        // m_ui.markDirty();
        m_ui.setContinousDraw(true);
    }

    void onExit() override {
        m_ui.setContinousDraw(false);
        m_ui.markFading();
    }
};

AppItem sillycat_app{
    .title = nullptr,
    .bitmap = nullptr,
    
    .createApp = [](PixelUI& ui) -> std::unique_ptr<IApplication> { 
        return std::make_unique<SillyCat>(ui); 
    },
    
    .type = MenuItemType::App,
    .order = 0
};